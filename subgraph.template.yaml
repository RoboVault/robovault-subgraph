specVersion: 0.0.3
schema:
  file: ./schema.graphql
dataSources:
  # Manually Instantiated Vaults (All vaults to be registered using this method until Robo implements a Registry)

  {{#manualVaults}}
  {{#comments}}
  # {{{.}}}
  {{/comments}}
  - kind: ethereum/contract
    name: {{name}}
    network: {{network}}
    source:
      startBlock: {{startBlock}}
      address: '{{address}}'
      abi: Vault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Vault
        - Strategy
        - VaultUpdate
        - Transfer
        - Account
        - Deposit
        - VaultUpdate
        - Transfer
        - Transaction
        - Token
        - AccountVaultPosition
        - AccountVaultPositionUpdate
      abis:
        - name: Vault
          file: ./abis/Vault.json
        - name: ERC20
          file: ./abis/ERC20Detailed.json
        - name: Strategy
          file: ./abis/StrategyAPI.json
        - name: Oracle
          file: ./abis/Oracle.json
        - name: CalculationsCurve
          file: ./abis/CalculationsCurve.json
        - name: CalculationsSushiSwap
          file: ./abis/CalculationsSushiSwap.json
      eventHandlers:
        - event: StrategyReported(indexed address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleStrategyReported_v0_3_0_v0_3_1
        - event: StrategyReported(indexed address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleStrategyReported
        - event: StrategyMigrated(indexed address,indexed address)
          handler: handleStrategyMigrated
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: UpdatePerformanceFee(uint256)
          handler: handleUpdatePerformanceFee
        - event: UpdateManagementFee(uint256)
          handler: handleUpdateManagementFee
        - event: StrategyAddedToQueue(indexed address)
          handler: handleStrategyAddedToQueue
        - event: StrategyRemovedFromQueue(indexed address)
          handler: handleStrategyRemovedFromQueue
        - event: UpdateRewards(address)
          handler: handleUpdateRewards
        - event: Deposit(indexed address,uint256,uint256)
          handler: handleDepositEvent
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleWithdrawEvent
          # V1: StrategyAdded(strategy,debtLimit,rateLimit,performanceFee)
        - event: StrategyAdded(indexed address,uint256,uint256,uint256)
          handler: handleStrategyAddedV1
          # V2: StrategyAdded(strategy,debtRatio,minDebtPerHarvest,maxDebtPerHarvest,performanceFee)
        - event: StrategyAdded(indexed address,uint256,uint256,uint256,uint256)
          handler: handleStrategyAddedV2
      {{#callHandlersEnabled}}
      callHandlers:
        - function: deposit()
          handler: handleDeposit
        - function: deposit(uint256)
          handler: handleDepositWithAmount
        - function: deposit(uint256,address)
          handler: handleDepositWithAmountAndRecipient
        - function: withdraw()
          handler: handleWithdraw
        - function: withdraw(uint256)
          handler: handleWithdrawWithShares
        - function: withdraw(uint256,address)
          handler: handleWithdrawWithSharesAndRecipient
      {{/callHandlersEnabled}}
      file: {{{mappingFile}}}
  {{/manualVaults}}

templates:
  # 1 Vault (template)
  - name: Vault
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: Vault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/vaultMappings.ts
      entities:
        - Vault
        - Strategy
        - StrategyMigration
        - VaultUpdate
        - Transfer
        - Account
        - Deposit
        - VaultUpdate
        - Transfer
        - Transaction
        - Token
        - AccountVaultPosition
        - AccountVaultPositionUpdate
      abis:
        - name: Vault
          file: ./abis/Vault.json
        - name: ERC20
          file: ./abis/ERC20Detailed.json
        - name: Strategy
          file: ./abis/StrategyAPI.json
        - name: Oracle
          file: ./abis/Oracle.json
        - name: CalculationsCurve
          file: ./abis/CalculationsCurve.json
        - name: CalculationsSushiSwap
          file: ./abis/CalculationsSushiSwap.json
      eventHandlers:
        - event: StrategyReported(indexed address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleStrategyReported_v0_3_0_v0_3_1
        - event: StrategyReported(indexed address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleStrategyReported
        - event: StrategyMigrated(indexed address,indexed address)
          handler: handleStrategyMigrated
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: UpdatePerformanceFee(uint256)
          handler: handleUpdatePerformanceFee
        - event: UpdateManagementFee(uint256)
          handler: handleUpdateManagementFee
        - event: StrategyAddedToQueue(indexed address)
          handler: handleStrategyAddedToQueue
        - event: StrategyRemovedFromQueue(indexed address)
          handler: handleStrategyRemovedFromQueue
        - event: UpdateRewards(address)
          handler: handleUpdateRewards
        - event: Deposit(indexed address,uint256,uint256)
          handler: handleDepositEvent
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleWithdrawEvent
          # V1: StrategyAdded(strategy,debtLimit,rateLimit,performanceFee)
        - event: StrategyAdded(indexed address,uint256,uint256,uint256)
          handler: handleStrategyAddedV1
          # V2: StrategyAdded(strategy,debtRatio,minDebtPerHarvest,maxDebtPerHarvest,performanceFee)
        - event: StrategyAdded(indexed address,uint256,uint256,uint256,uint256)
          handler: handleStrategyAddedV2
        - event: UpdateHealthCheck(indexed address)
          handler: handleUpdateHealthCheck
      {{#callHandlersEnabled}}
      callHandlers:
        - function: deposit()
          handler: handleDeposit
        - function: deposit(uint256)
          handler: handleDepositWithAmount
        - function: deposit(uint256,address)
          handler: handleDepositWithAmountAndRecipient
        - function: withdraw()
          handler: handleWithdraw
        - function: withdraw(uint256)
          handler: handleWithdrawWithShares
        - function: withdraw(uint256,address)
          handler: handleWithdrawWithSharesAndRecipient
      {{/callHandlersEnabled}}
  - name: Strategy
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: Strategy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/strategyMappings.ts
      entities:
        - Vault
        - Strategy
        - VaultUpdate
        - Transfer
        - Account
        - AccountUpdate
        - AccountVaultBalance
        - Token
      abis:
        - name: Vault
          file: ./abis/Vault.json
        - name: ERC20
          file: ./abis/ERC20Detailed.json
        - name: Strategy
          file: ./abis/StrategyAPI.json
      eventHandlers:
        - event: Harvested(uint256,uint256,uint256,uint256)
          handler: handleHarvested
        - event: Cloned(indexed address)
          handler: handleCloned
        - event: SetHealthCheck(address)
          handler: handleSetHealthCheckEvent
        - event: SetDoHealthCheck(bool)
          handler: handleSetDoHealthCheckEvent
      {{#callHandlersEnabled}}
      callHandlers:
        - function: setHealthCheck(address)
          handler: handleSetHealthCheck
        - function: setDoHealthCheck(bool)
          handler: handleSetDoHealthCheck
      {{/callHandlersEnabled}}
